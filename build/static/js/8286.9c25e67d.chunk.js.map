{"version":3,"file":"static/js/8286.9c25e67d.chunk.js","mappings":"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","sources":["views/examination/CertificateGenerator.js","views/examination/ThankYouPage.js","views/examination/ThankYouPageExam.js","views/examination/Quiz.js","views/examination/QuizComponent.js","views/exam/RecentExam.js","routes.js","components/AppBreadcrumb.js","components/AppContent.js","components/AppFooter.js","components/header/AppHeaderDropdown.js","components/AppHeader.js","components/AppSidebarNav.js","_nav.js","components/AppSidebar.js","components/DocsCallout.js","components/DocsLink.js","components/DocsExample.js","layout/DefaultLayout.js","utility/api.js","views/ownComponent/DataTable.js"],"sourcesContent":["\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport { FaDownload, FaPrint } from 'react-icons/fa';\nimport certificate from \"src/assets/own_img/certificate.jpeg\"\nimport jsPDF from 'jspdf';\n\nconst CertificateGenerator = ({ data, setIsCertificateModalOpen }) => {\n    const [imageLoaded, setImageLoaded] = useState(false);\n    const imageRef = useRef(null);\n    const canvasRef = useRef(null);\n\n    useEffect(() => {\n        if (!imageLoaded) return;\n\n        const examDateTime = new Date(data.exam_id.examDateTime);\n        const exam_date = examDateTime.toLocaleDateString(\"en-GB\", {\n            day: \"2-digit\",\n            month: \"2-digit\",\n            year: \"numeric\",\n        });\n        const ctx = canvasRef.current.getContext('2d');\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n        ctx.drawImage(imageRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n        ctx.font = '30px Arial';\n        ctx.fillStyle = 'black';\n        ctx.fillText(`${data?.student_id?.name}`, 528, 650);\n        ctx.fillText(`${data?.exam_id?.level_id?.name}`, 810, 800);\n        ctx.fillText(`${data?.exam_id?.organization_id?.address}`, 940, 910);\n        ctx.fillText(`${exam_date}`, 677, 910);\n    }, [data.student_id.name, imageLoaded]);\n\n    const handleDownload = () => {\n        const link = document.createElement('a');\n        link.download = `certificate_${data.student_id.name}.png`;\n        link.href = canvasRef.current.toDataURL('image/png');\n        link.click();\n    };\n\n    const handlePrint = () => {\n        // Convert canvas image to data URL\n        const dataUrl = canvasRef.current.toDataURL('image/png');\n    \n        // Create a new PDF document\n        const pdf = new jsPDF('p', 'mm', 'a4');\n    \n        // Calculate aspect ratio of the image\n        const img = new Image();\n        img.src = dataUrl;\n        img.onload = function() {\n            const aspectRatio = img.width / img.height;\n            const width = 210; // A4 page width in mm\n            const height = width / aspectRatio;\n    \n            // Calculate padding\n            const padding = 5; // Padding in mm\n            const paddedWidth = width - (padding * 2);\n            const paddedHeight = height - (padding * 2);\n            const x = padding;\n            const y = padding;\n    \n            // Add the image to the PDF document with padding\n            pdf.addImage(dataUrl, 'PNG', x, y, paddedWidth, paddedHeight);\n    \n            // Save the PDF document and open the print dialog\n            pdf.autoPrint(); // Automatically print the document without showing the print dialog\n            pdf.save(`certificate_${data.student_id.name}.pdf`);\n        };\n    };\n    \n    \n\n    return (\n        <div>\n            <Modal\n                show={true}\n                onHide={() => setIsCertificateModalOpen(false)}\n                dialogClassName=\"modal-125w\"\n                contentClassName=\"modal-content-100w\"\n                size=\"xl\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Certificate</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <canvas ref={canvasRef} width=\"100%\" height=\"auto\" style={{ width: \"-webkit-fill-available\" }}></canvas>\n                    <img\n                        ref={imageRef}\n                        src={certificate}\n                        alt=\"Certificate\"\n                        style={{ display: 'none', }}\n                        onLoad={() => {\n                            setImageLoaded(true);\n                            canvasRef.current.width = imageRef.current.naturalWidth;\n                            canvasRef.current.height = imageRef.current.naturalHeight;\n                        }}\n                    />\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"success\" style={{ color: \"white\" }} onClick={handleDownload}><FaDownload /> Download Certificate</Button>\n                    <Button variant=\"primary\" onClick={handlePrint}><FaPrint /> Print Certificate</Button>\n                    <Button variant=\"secondary\" onClick={() => setIsCertificateModalOpen(false)}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n};\n\nexport default CertificateGenerator;\n","import React, { useEffect, useState } from 'react';\nimport \"./Thnaks.css\"\nimport { FaDownload } from 'react-icons/fa';\nimport { updateStudentData ,renderExamStudentById} from 'src/utility/api';\nimport CertificateGenerator from './CertificateGenerator';\nimport Cookies from 'js-cookie';\n\n\nconst ThankYouPage = ({examId}) => {\n\n\nconsole.log(\"examId\", examId)\n    const [isCertificateModalOpen, setIsCertificateModalOpen] = useState(false)\n   \n\n    const [examDataForPrint, setExamDataForPrint] = useState({});\n    const [examType, setExamType] = useState(Cookies.get(\"examType\"))\n    \n\n    console.log(\"examType\", examType)\n    useEffect(() => {\n        renderData()\n\n    }, []);\n\n    const downloadCertificate = () => {\n        setIsCertificateModalOpen(true)\n    }\n\n    // const addMarks = async () => {\n    //     const obj = {\n    //         total_questions: questions.length,\n    //         wrong_questions: result.wrongAnswers,\n    //         exam_score: result.score,\n    //         correct_questions: result.correctAnswers,\n    //         exam_student_id: id\n    //     }\n\n    //     const response = await updateStudentData(obj)\n    //     if (response.success) {\n    //         console.log(\"updateStudentData\", response)\n    //     }\n    // }\n    const renderData = async ()=>{\n    \n        const response = await renderExamStudentById(examId)\n        if (response.success) {\n            setExamDataForPrint(response.data[0])\n            console.log(\"response.data[0]\", response.data[0])\n        }\n    }\n    return (\n        <>\n            <div className=\"content\">\n                <div className=\"wrapper-1\">\n                    <div className=\"wrapper-2\">\n                        <h1>Thank you !</h1>\n                        <p>Your exam has been submitted successfully.</p>\n                        <hr></hr>\n                        <h1>Result</h1>\n                        <p className='text-result'>\n                            <b>Total Question</b>  &nbsp; &nbsp; &nbsp;  <span>: {examDataForPrint.total_questions}</span>\n                        </p>\n                        <p className='text-result'>\n                            <b>Total Score</b> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>: {examDataForPrint.exam_score}</span>\n                        </p>\n                        <p className='text-result'>\n                            <b>Correct Answers</b>&nbsp;&nbsp;&nbsp;<span className='margin_2'>:  {examDataForPrint.correct_questions}</span>\n                        </p>\n                        <p className='text-result'>\n                            <b>Wrong Answers</b>  &nbsp; &nbsp; <span>: {examDataForPrint.wrong_questions}</span>\n                        </p>\n                        {examType == \"e\" ? <> <hr></hr>\n                        <button className=\"go-home\" onClick={downloadCertificate}><FaDownload></FaDownload> Download Certificate</button></> : ''}\n                       \n                    </div>\n                    <div className=\"footer-like\">\n                        <p>Thanks for visiting. <a href=\"/recent-examination\">Click here to go back</a></p>\n                    </div>\n                </div>\n            </div>\n            {isCertificateModalOpen ? <CertificateGenerator data={examDataForPrint} setIsCertificateModalOpen={setIsCertificateModalOpen} /> : ''}</>\n    );\n};\n\nexport default ThankYouPage;\n","import React, { useEffect, useState } from 'react';\nimport \"./Thnaks.css\"\nimport { FaDownload } from 'react-icons/fa';\nimport { updateStudentData ,renderExamStudentById} from 'src/utility/api';\nimport CertificateGenerator from './CertificateGenerator';\nimport Cookies from 'js-cookie';\n\n\nconst ThankYouExamPage = ({ result, questions, id, isCompleted }) => {\n\n    const [isCertificateModalOpen, setIsCertificateModalOpen] = useState(false)\n    const [examDataForPrint, setExamDataForPrint] = useState({});\n    const [examType, setExamType] = useState(Cookies.get(\"examType\"))\n\n    console.log(\"examType\", examType)\n    useEffect(() => {\n\n        if (!isCompleted && examType == \"e\") {\n            addMarks()\n        }\n        renderData()\n\n    }, []);\n\n    const downloadCertificate = () => {\n        setIsCertificateModalOpen(true)\n    }\n\n    const addMarks = async () => {\n        const obj = {\n            total_questions: questions.length,\n            wrong_questions: result.wrongAnswers,\n            exam_score: result.score,\n            correct_questions: result.correctAnswers,\n            exam_student_id: id\n        }\n\n        const response = await updateStudentData(obj)\n        if (response.success) {\n            console.log(\"updateStudentData\", response)\n        }\n    }\n    const renderData = async ()=>{\n        \n\n        const response = await renderExamStudentById(id)\n        if (response.success) {\n            setExamDataForPrint(response.data[0])\n            console.log(\"response.data[0]\", response.data[0])\n        }\n    }\n    return (\n        <>\n            <div className=\"content\">\n                <div className=\"wrapper-1\">\n                    <div className=\"wrapper-2\">\n                        <h1>Thank you !</h1>\n                        <p>Your exam has been submitted successfully.</p>\n                        <hr></hr>\n                        <h1>Result</h1>\n                        <p className='text-result'>\n                            <b>Total Question</b>  &nbsp; &nbsp; &nbsp;  <span>: {questions.length}</span>\n                        </p>\n                        <p className='text-result'>\n                            <b>Total Score</b> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>: {result.score}</span>\n                        </p>\n                        <p className='text-result'>\n                            <b>Correct Answers</b>&nbsp;&nbsp;&nbsp;<span className='margin_2'>:  {result.correctAnswers}</span>\n                        </p>\n                        <p className='text-result'>\n                            <b>Wrong Answers</b>  &nbsp; &nbsp; <span>: {result.wrongAnswers}</span>\n                        </p>\n                        {examType == \"e\" ? <> <hr></hr>\n                        <button className=\"go-home\" onClick={downloadCertificate}><FaDownload></FaDownload> Download Certificate</button></> : ''}\n                       \n                    </div>\n                    <div className=\"footer-like\">\n                        <p>Thanks for visiting. <a href=\"/examination\">Click here to go back</a></p>\n                    </div>\n                </div>\n            </div>\n            {isCertificateModalOpen ? <CertificateGenerator data={examDataForPrint} setIsCertificateModalOpen={setIsCertificateModalOpen} /> : ''}</>\n    );\n};\n\nexport default ThankYouExamPage;\n","import React, { useState, useEffect } from 'react';\nimport './Quiz.css';\nimport { FaClock } from 'react-icons/fa';\nimport ThankYouPage from './ThankYouPage';\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Swal from \"sweetalert2\";\nimport { renderExamQuestionData, renderExamStudentById, submitExamData, renderExamPracticeQuestionData } from 'src/utility/api';\nimport { useParams } from \"react-router-dom\";\nimport Cookies from 'js-cookie';\nimport ThankYouExamPage from './ThankYouPageExam';\n\n\nconst Quiz = () => {\n    const [activeQuestion, setActiveQuestion] = useState(0);\n    const [selectedAnswers, setSelectedAnswers] = useState(Array(4).fill(null));\n    const [showResult, setShowResult] = useState(false);\n    const [isTimerRunning, setIsTimerRunning] = useState(true);\n    const [isCompleted, setIsCompleted] = useState();\n    const [title, setTitle] = useState(\"Exam\");\n\n\n    const [result, setResult] = useState({\n        score: 0,\n        correctAnswers: 0,\n        wrongAnswers: 0,\n    });\n    const [timer, setTimer] = useState(1800); // 1 hour in seconds\n    const [questions, setQuestions] = useState([]);\n\n    const { id, id1 } = useParams();\n    const userId = Cookies.get('adminId');\n    const orgId = Cookies.get('organizationId');\n    const levelId = Cookies.get('levelId');\n\n\n\n    useEffect(() => {\n        //check exam type\n        const examType = Cookies.get(\"examType\")\n        if (examType == \"e\") {\n            setTitle(\"Final Exam\")\n        } else {\n            setTitle(\"Practice Exam\")\n        }\n\n        checkExamStatus();\n        setActiveQuestion(0); // Reset activeQuestion to 0 when questions are loaded\n        renderQuestion(examType);\n    }, []);\n\n    useEffect(() => {\n        if (isCompleted) {\n            setShowResult(true);\n        }\n    }, [isCompleted]);\n\n\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setTimer((prevTimer) => {\n                if (prevTimer === 0) {\n                    setIsTimerRunning(false);\n                    clearInterval(interval);\n\n                    toast.error(\"Time is over, Exam is submitted successfully, Thank you.\", {\n                        position: \"top-right\",\n                        autoClose: 10000,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                        theme: \"light\",\n                    });\n\n                    submitFunction()\n\n\n                    return 0;\n                }\n                return prevTimer - 1;\n            });\n        }, 1000);\n\n        return () => clearInterval(interval);\n    }, []);\n\n    // /renderQuestion\n    const renderQuestion = async (examType) => {\n        if (examType == \"e\") {\n            const response = await renderExamQuestionData(id1);\n            if (response.success) {\n                console.log(\"response\", response)\n                const timerCount = response.data[0]?.exam_id?.exam_duration\n\n                // setTimer(30)\n                if (timerCount == \"30M\") {\n                    setTimer(1800);\n                }\n                else if (timerCount == \"1H\") {\n                    setTimer(3600);\n                } else if (timerCount == \"1.5H\") {\n                    setTimer(5400);\n                }\n                else if (timerCount == \"2H\") {\n                    setTimer(7200);\n                } else if (timerCount == \"2.5H\") {\n                    setTimer(9000);\n                }\n                else if (timerCount == \"3H\") {\n                    setTimer(10800);\n                } else if (timerCount == \"3.5H\") {\n                    setTimer(12600);\n                }\n                else if (timerCount == \"4H\") {\n                    setTimer(14400);\n                }\n\n                const updatedQuestions = response.data.map((question) => {\n                    const correctAnswer = question.question_id.options.find((option) => option.is_true);\n                    return {\n                        ...question,\n                        correctAnswer: correctAnswer.name,\n                    };\n                });\n                setQuestions(updatedQuestions);\n            }\n        } else {\n            const response = await renderExamPracticeQuestionData(id1);\n            if (response.success) {\n                console.log(\"response\", response)\n                const timerCount = response.data[0]?.exam_id?.exam_duration\n\n                // setTimer(30)\n                if (timerCount == \"30M\") {\n                    setTimer(1800);\n                }\n                else if (timerCount == \"1H\") {\n                    setTimer(3600);\n                } else if (timerCount == \"1.5H\") {\n                    setTimer(5400);\n                }\n                else if (timerCount == \"2H\") {\n                    setTimer(7200);\n                } else if (timerCount == \"2.5H\") {\n                    setTimer(9000);\n                }\n                else if (timerCount == \"3H\") {\n                    setTimer(10800);\n                } else if (timerCount == \"3.5H\") {\n                    setTimer(12600);\n                }\n                else if (timerCount == \"4H\") {\n                    setTimer(14400);\n                }\n\n                const updatedQuestions = response.data.map((question) => {\n                    const correctAnswer = question.question_id.options.find((option) => option.is_true);\n                    return {\n                        ...question,\n                        correctAnswer: correctAnswer?.name,\n                    };\n                });\n                setQuestions(updatedQuestions);\n            }\n        }\n    }\n\n    //checkExamStatus\n    const checkExamStatus = async () => {\n        const response = await renderExamStudentById(id);\n        if (response.success) {\n            setIsCompleted(response.data[0]?.is_completed)\n        }\n    }\n\n    //submitExamAnswer\n    const submitExamAnswer = async (obj) => {\n        const response = await submitExamData(obj);\n        if (response.success) {\n            // console.log(response)\n        } else {\n            // console.log(response)\n        }\n    }\n\n    const onClickNext = async () => {\n        const updatedSelectedAnswers = [...selectedAnswers];\n        updatedSelectedAnswers[activeQuestion] = selectedAnswers[activeQuestion];\n        setSelectedAnswers(updatedSelectedAnswers);\n\n\n        // Calculate the result\n        const correctAnswers = questions.reduce((acc, q, i) => {\n            return acc + (q.correctAnswer === selectedAnswers[i] ? 1 : 0);\n        }, 0);\n\n        const totalScore = correctAnswers * 1; // Assuming perQuestionScore is always 1\n\n        setResult({\n            score: totalScore,\n            correctAnswers: correctAnswers,\n            wrongAnswers: questions.length - correctAnswers,\n        });\n\n        if (activeQuestion !== questions.length - 1) {\n            setActiveQuestion((prev) => prev + 1);\n        } else {\n            const confirmDelete = await Swal.fire({\n                title: \"Are you sure to finish the exam?\",\n                text: \"You will not be able to recover this exam!\",\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: '#28a745',\n                cancelButtonColor: \"#3085d6\",\n                confirmButtonText: \"Yes, finish it!\",\n            });\n\n            if (confirmDelete.isConfirmed) {\n\n                let type = Cookies.get(\"examType\")\n                if (type == \"e\") {\n                    submitFunction()\n                }else{\n                    setActiveQuestion(0);\n                    setShowResult(true);\n                }\n\n\n\n            }\n        }\n    };\n\n    const submitFunction = async () => {\n        // console.log(\"result\",result)\n        const examSubmissionData = questions.map((q, i) => {\n            const selectedOption = selectedAnswers[i];\n            const isQuestionAnswerRight = q.correctAnswer == selectedOption;\n\n            return {\n                question_id: q.question_id._id,\n                options: q.question_id.options.map((opt) => ({\n                    name: opt.name,\n                    is_answer: opt.name === selectedOption,\n                    is_true: opt.is_true\n                })),\n                is_question_answer_right: isQuestionAnswerRight,\n                exam_id: id1,\n                examination_id: id,\n                student_id: userId,\n                organization_id: orgId,\n                level_id: levelId,\n\n            };\n        });\n\n        await submitExamAnswer(examSubmissionData);\n        setActiveQuestion(0);\n        setShowResult(true);\n    }\n\n\n    const onClickPrevious = () => {\n        if (activeQuestion !== 0) {\n            setActiveQuestion((prev) => prev - 1);\n        }\n    };\n\n    const onAnswerSelected = (answer, index) => {\n        const updatedSelectedAnswers = [...selectedAnswers];\n        updatedSelectedAnswers[activeQuestion] = answer;\n        setSelectedAnswers(updatedSelectedAnswers);\n    };\n\n    const addLeadingZero = (number) => (number > 9 ? number : `0${number}`);\n\n    const secondsToTime = (seconds) => {\n        const hours = Math.floor(seconds / 3600);\n        const minutes = Math.floor((seconds % 3600) / 60);\n        const remainingSeconds = seconds % 60;\n        return `${addLeadingZero(hours)}:${addLeadingZero(minutes)}:${addLeadingZero(remainingSeconds)}`;\n    };\n\n    return (\n        <div className=\"quiz-wrapper\">\n\n            {questions.length > 0 && (\n                !showResult ? (\n                    <>\n                        <div className=\"quiz-container\">\n                            <h2 className='text-center mb-3'>{title}</h2>\n                            <p className=\"instruction\">Please Do Not Refresh The Page Until You Finish The Exam, Otherwise You Will Not Be Able To Submit.</p>\n\n                            {isTimerRunning ? (\n                                <>\n                                    <div className=\"timer\">\n                                        <FaClock className=\"timer-show-icon\" />\n                                        <span className=\"timer-show\">{secondsToTime(timer)}</span>\n                                    </div>\n                                    <hr />\n                                </>\n                            ) : null}\n                            <div>\n                                <div>\n                                    <span className=\"active-question-no\">{addLeadingZero(activeQuestion + 1)}</span>\n                                    <span className=\"total-question\">/{addLeadingZero(questions.length)}</span>\n                                </div>\n                                <h2>{questions[activeQuestion].question_id.question}</h2>\n                                <ul>\n                                    {questions[activeQuestion].question_id.options.map((option) => (\n                                        <li\n                                            key={option.name}\n                                            onClick={() => onAnswerSelected(option.name, activeQuestion)}\n                                            className={\n                                                selectedAnswers[activeQuestion] === option.name ? 'selected-answer' : null\n                                            }\n                                        >\n                                            {option.name}\n                                        </li>\n                                    ))}\n                                </ul>\n                                <div className=\"flex-right\">\n                                    <button className='mx-2' onClick={onClickPrevious} disabled={activeQuestion === 0}>\n                                        Previous\n                                    </button>\n                                    <button onClick={onClickNext} disabled={selectedAnswers[activeQuestion] === null}>\n                                        {activeQuestion === questions.length - 1 ? 'Finish' : 'Next'}\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <ThankYouExamPage result={result} questions={questions} id={id} isCompleted={isCompleted} examType={Cookies.get(\"examType\")}></ThankYouExamPage>\n                )\n            )}\n        </div>\n    );\n\n\n};\n\nexport default Quiz;\n","import React, { useState } from 'react';\nimport RenderQuestion from './RenderQuestion';\nimport Quiz from './Quiz';\n\n\n\nconst QuizComponent = () => {\n\n\n    return (\n        <>\n        {/* <RenderQuestion></RenderQuestion> */}\n        <Quiz></Quiz>\n        </>\n    );\n};\n\nexport default QuizComponent;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { FaEdit, FaTrash, FaEye } from \"react-icons/fa\";\nimport {\n    CButton,\n    CCol,\n    CForm,\n    CFormInput,\n    CFormFeedback,\n    CFormLabel,\n    CFormSelect,\n} from \"@coreui/react\";\nimport DataTable from \"../ownComponent/DataTable\";\nimport FormsCustom from \"../ownComponent/FormsCustom\";\nimport {\n    renderOrganizationData,\n    renderTeacherData,\n    addExam,\n    editExam,\n    deleteExamData,\n    renderExamData,\n    renderLevelData,\n    renderTeacherByOrganization,\n    renderExamDataByOrganization,\n    renderExamByStudentId\n} from \"src/utility/api\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport PropTypes from \"prop-types\";\nimport Swal from \"sweetalert2\";\nimport Select from \"react-select\";\nimport Cookies from 'js-cookie'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useNavigate } from 'react-router-dom'\nimport ThankYouPage from \"../examination/ThankYouPage\";\n\n\nfunction RecentExam() {\n    const orgId = Cookies.get(\"organizationId\");\n    const studentId = Cookies.get(\"adminId\");\n\n    const [data, setData] = useState([]);\n    const [examId, setExamId] = useState([]);\n    const [isResult, setIsResult] = useState(false)\n    \n    const navigate = useNavigate()\n    useEffect(() => {\n        renderData();\n    }, []);\n\n    // render data\n    const renderData = async () => {\n        const obj = {\n            \"student_id\": studentId,\n            \"type\": \"recent\"\n        }\n        const response = await renderExamByStudentId(obj);\n        if (response.success) {\n            setData(response.data);\n        }\n    };\n\n    // handleExamView\n    const handleExamView = async (data) => {\n        let id = data._id\n        setExamId(id)\n        setIsResult(true)\n        Cookies.set(\"examType\", \"e\", { secure: true, sameSite: 'strict' })\n        \n    }\n\n    const columns = [\n        { Header: \"Exam Name\", accessor: \"exam_id.exam_name\" },\n        { Header: \"Level Name\", accessor: \"exam_id.level_id.name\" },\n        { Header: \"Incharge Teacher\", accessor: \"exam_id.teacher_id.name\" },\n        { Header: \"Exam Duration\", accessor: \"exam_id.exam_duration\" },\n        { Header: \"Total Marks\", accessor: \"exam_id.total_marks\" },\n\n\n        {\n            Header: \"Exam Start Date & Time\",\n            accessor: \"exam_id.examDateTime\",\n            Cell: ({ value }) => {\n                // Format the date\n                const formattedDate = new Date(value).toLocaleDateString(\"en-GB\", {\n                    day: \"numeric\",\n                    month: \"short\",\n                    year: \"numeric\",\n                });\n\n                // Format the time\n                const formattedTime = new Date(value).toLocaleTimeString(\"en-US\", {\n                    hour: \"numeric\",\n                    minute: \"numeric\",\n                    hour12: true,\n                });\n\n                return `${formattedDate} ${formattedTime}`;\n            },\n        },\n        {\n            Header: \"Exam End Date & Time\",\n            accessor: \"exam_id.examEndDateTime\",\n            Cell: ({ value }) => {\n                // Format the date\n                const formattedDate = new Date(value).toLocaleDateString(\"en-GB\", {\n                    day: \"numeric\",\n                    month: \"short\",\n                    year: \"numeric\",\n                });\n\n                // Format the time\n                const formattedTime = new Date(value).toLocaleTimeString(\"en-US\", {\n                    hour: \"numeric\",\n                    minute: \"numeric\",\n                    hour12: true,\n                });\n\n                return `${formattedDate} ${formattedTime}`;\n            },\n        },\n        {\n            Header: \"Exam Status\",\n            accessor: \"is_completed\",\n            Cell: ({ value }) => (\n                <CButton\n                    color={value ? \"success\" : \"danger\"}\n                    size=\"sm\"\n                    style={{ color: \"white\", borderRadius: \"20px\", minWidth: \"110px\" }} // Set a fixed width\n                >\n                    {value ? \"Completed\" : \"Not Completed\"}\n                </CButton>\n            ),\n        },\n        {\n            Header: \"Actions\",\n            accessor: \"_id\", // Assuming you have an 'id' property in your teacher data\n            Cell: ({ row }) => {\n                if (row.original.is_completed) {\n                    return (\n                        <CButton\n                            color=\"success\"\n                            size=\"sm\"\n                            style={{ color: \"white\", width: \"-webkit-fill-available\", fontWeight: \"bold\" }}\n                            onClick={() => handleExamView(row.original)}\n                        >\n                            <FaEye /> See Result\n                        </CButton>\n                    )\n                } else {\n                    return \"-\"\n                }\n\n            },\n        },\n\n        // {\n        //     Header: \"Actions\",\n        //     accessor: \"_id\", // Assuming you have an 'id' property in your teacher data\n        //     Cell: ({ row }) => (\n\n        //         <>\n\n        //             <CButton\n        //                 color=\"info\"\n        //                 size=\"sm\"\n        //                 style={{ color: \"white\" }}\n        //                 onClick={() => handleEdit(row.original._id)}\n        //             >\n        //                 <FaEdit /> Start Practice Exam\n        //             </CButton>{\" \"}\n\n\n\n        //             <CButton\n        //                 color=\"success\"\n        //                 size=\"sm\"\n        //                 style={{ color: \"white\" }}\n        //                 onClick={() => handleExamView(row.original._id)}\n\n        //             >\n        //                 <FaEdit /> Start Final Exam\n        //             </CButton>\n\n        //         </>\n        //     ),\n        // },\n\n\n\n\n\n    ];\n\n    return (\n        <>\n           \n\n            {isResult? <ThankYouPage examId={examId}></ThankYouPage>:<> <DataTable columns={columns} data={data} name=\"Exam List\" /></>}\n           \n\n        </>\n    );\n}\n\nexport default RecentExam\n","import React from 'react'\n\n\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'))\nconst Colors = React.lazy(() => import('./views/theme/colors/Colors'))\nconst Typography = React.lazy(() => import('./views/theme/typography/Typography'))\n\n// Base\nconst Accordion = React.lazy(() => import('./views/base/accordion/Accordion'))\nconst Breadcrumbs = React.lazy(() => import('./views/base/breadcrumbs/Breadcrumbs'))\nconst Cards = React.lazy(() => import('./views/base/cards/Cards'))\nconst Carousels = React.lazy(() => import('./views/base/carousels/Carousels'))\nconst Collapses = React.lazy(() => import('./views/base/collapses/Collapses'))\nconst ListGroups = React.lazy(() => import('./views/base/list-groups/ListGroups'))\nconst Navs = React.lazy(() => import('./views/base/navs/Navs'))\nconst Paginations = React.lazy(() => import('./views/base/paginations/Paginations'))\nconst Placeholders = React.lazy(() => import('./views/base/placeholders/Placeholders'))\nconst Popovers = React.lazy(() => import('./views/base/popovers/Popovers'))\nconst Progress = React.lazy(() => import('./views/base/progress/Progress'))\nconst Spinners = React.lazy(() => import('./views/base/spinners/Spinners'))\nconst Tables = React.lazy(() => import('./views/base/tables/Tables'))\nconst Tooltips = React.lazy(() => import('./views/base/tooltips/Tooltips'))\n\n// Buttons\nconst Buttons = React.lazy(() => import('./views/buttons/buttons/Buttons'))\nconst ButtonGroups = React.lazy(() => import('./views/buttons/button-groups/ButtonGroups'))\nconst Dropdowns = React.lazy(() => import('./views/buttons/dropdowns/Dropdowns'))\n\n//Forms\nconst ChecksRadios = React.lazy(() => import('./views/forms/checks-radios/ChecksRadios'))\nconst FloatingLabels = React.lazy(() => import('./views/forms/floating-labels/FloatingLabels'))\nconst FormControl = React.lazy(() => import('./views/forms/form-control/FormControl'))\nconst InputGroup = React.lazy(() => import('./views/forms/input-group/InputGroup'))\nconst Layout = React.lazy(() => import('./views/forms/layout/Layout'))\nconst Range = React.lazy(() => import('./views/forms/range/Range'))\nconst Select = React.lazy(() => import('./views/forms/select/Select'))\nconst Validation = React.lazy(() => import('./views/forms/validation/Validation'))\n\nconst Charts = React.lazy(() => import('./views/charts/Charts'))\n\n// Icons\nconst CoreUIIcons = React.lazy(() => import('./views/icons/coreui-icons/CoreUIIcons'))\nconst Flags = React.lazy(() => import('./views/icons/flags/Flags'))\nconst Brands = React.lazy(() => import('./views/icons/brands/Brands'))\n\n// Notifications\nconst Alerts = React.lazy(() => import('./views/notifications/alerts/Alerts'))\nconst Badges = React.lazy(() => import('./views/notifications/badges/Badges'))\nconst Modals = React.lazy(() => import('./views/notifications/modals/Modals'))\nconst Toasts = React.lazy(() => import('./views/notifications/toasts/Toasts'))\n\nconst Widgets = React.lazy(() => import('./views/widgets/Widgets'))\n\n//Own Routes\nconst Exam = React.lazy(() => import('./views/exam/Exam'))\nimport QuizComponent from './views/examination/QuizComponent';\nimport RecentExam from './views/exam/RecentExam'\n\n\n\n\n\n\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/dashboard', name: 'Dashboard', element: Dashboard },\n  { path: '/examination', name: 'Examination', element: Exam },\n  { path: '/recent-examination', name: 'Recent Examination', element: RecentExam },\n  { path: '/exam/:id/:id1', name: 'Exam', element: QuizComponent },\n  { path: '/theme', name: 'Theme', element: Colors, exact: true },\n  { path: '/theme/colors', name: 'Colors', element: Colors },\n  { path: '/theme/typography', name: 'Typography', element: Typography },\n  { path: '/base', name: 'Base', element: Cards, exact: true },\n  { path: '/base/accordion', name: 'Accordion', element: Accordion },\n  { path: '/base/breadcrumbs', name: 'Breadcrumbs', element: Breadcrumbs },\n  { path: '/base/cards', name: 'Cards', element: Cards },\n  { path: '/base/carousels', name: 'Carousel', element: Carousels },\n  { path: '/base/collapses', name: 'Collapse', element: Collapses },\n  { path: '/base/list-groups', name: 'List Groups', element: ListGroups },\n  { path: '/base/navs', name: 'Navs', element: Navs },\n  { path: '/base/paginations', name: 'Paginations', element: Paginations },\n  { path: '/base/placeholders', name: 'Placeholders', element: Placeholders },\n  { path: '/base/popovers', name: 'Popovers', element: Popovers },\n  { path: '/base/progress', name: 'Progress', element: Progress },\n  { path: '/base/spinners', name: 'Spinners', element: Spinners },\n  { path: '/base/tables', name: 'Tables', element: Tables },\n  { path: '/base/tooltips', name: 'Tooltips', element: Tooltips },\n  { path: '/buttons', name: 'Buttons', element: Buttons, exact: true },\n  { path: '/buttons/buttons', name: 'Buttons', element: Buttons },\n  { path: '/buttons/dropdowns', name: 'Dropdowns', element: Dropdowns },\n  { path: '/buttons/button-groups', name: 'Button Groups', element: ButtonGroups },\n  { path: '/charts', name: 'Charts', element: Charts },\n  { path: '/forms', name: 'Forms', element: FormControl, exact: true },\n  { path: '/forms/form-control', name: 'Form Control', element: FormControl },\n  { path: '/forms/select', name: 'Select', element: Select },\n  { path: '/forms/checks-radios', name: 'Checks & Radios', element: ChecksRadios },\n  { path: '/forms/range', name: 'Range', element: Range },\n  { path: '/forms/input-group', name: 'Input Group', element: InputGroup },\n  { path: '/forms/floating-labels', name: 'Floating Labels', element: FloatingLabels },\n  { path: '/forms/layout', name: 'Layout', element: Layout },\n  { path: '/forms/validation', name: 'Validation', element: Validation },\n  { path: '/icons', exact: true, name: 'Icons', element: CoreUIIcons },\n  { path: '/icons/coreui-icons', name: 'CoreUI Icons', element: CoreUIIcons },\n  { path: '/icons/flags', name: 'Flags', element: Flags },\n  { path: '/icons/brands', name: 'Brands', element: Brands },\n  { path: '/notifications', name: 'Notifications', element: Alerts, exact: true },\n  { path: '/notifications/alerts', name: 'Alerts', element: Alerts },\n  { path: '/notifications/badges', name: 'Badges', element: Badges },\n  { path: '/notifications/modals', name: 'Modals', element: Modals },\n  { path: '/notifications/toasts', name: 'Toasts', element: Toasts },\n  { path: '/widgets', name: 'Widgets', element: Widgets },\n]\n\nexport default routes\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { FaArrowAltCircleLeft, FaArrowLeft } from \"react-icons/fa\";\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute ? currentRoute.name : false\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      const routeName = getRouteName(currentPathname, routes)\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      \n      <CBreadcrumbItem onClick={() => window.history.back()} style={{ cursor: 'pointer' }}><FaArrowLeft/> <span className='mt-3'>Back</span></CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })} key={index}>\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n    \n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route key={idx} path={route.path} exact={route.exact} name={route.name} element={<route.element />} />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n  return (\n    <CFooter>\n      <div>\n        <a href=\"\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Vidyam Group\n        </a>\n        <span className=\"ms-1\">&copy; 2024 Vidyam Group.</span>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","import React, { useEffect } from 'react';\nimport { CAvatar, CDropdown, CDropdownHeader, CDropdownItem, CDropdownMenu, CDropdownToggle, CDropdownDivider } from '@coreui/react';\nimport { cilUser, cilSettings, cilLockLocked } from '@coreui/icons';\nimport CIcon from '@coreui/icons-react';\nimport Cookies from 'js-cookie';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst AppHeaderDropdown = () => {\n  const logOut = () => {\n    Cookies.remove('accessToken');\n    Cookies.remove('name');\n    Cookies.remove('adminId');\n    toast.error('Logged Out Successfully...!', {\n      position: toast.POSITION.TOP_RIGHT,\n      autoClose: 3000,\n    });\n    setTimeout(() => {\n      window.location.href = '/admin-login';\n    }, 2000);\n  };\n\n \n  const getInitials = (name) => {\n    return name.split(' ').map((part) => part[0]).join('').toUpperCase();\n  };\n\n  const name = Cookies.get('name');\n  const initials = name ? getInitials(name) : '';\n\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n        <div className=\"avatar-container\">\n          <CAvatar size=\"md\"><b>{initials}</b></CAvatar>\n          <div className=\"avatar-overlay\"></div>\n        </div>\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">Settings</CDropdownHeader>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilUser} className=\"me-2\" />\n          Profile\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilSettings} className=\"me-2\" />\n          Settings\n        </CDropdownItem>\n        <CDropdownDivider />\n        <CDropdownItem onClick={logOut} className=\"hover_css\">\n          <CIcon icon={cilLockLocked} className=\"me-2\" />\n          Log Out\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  );\n};\n\nexport default AppHeaderDropdown;\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilEnvelopeOpen, cilList, cilMenu } from '@coreui/icons'\n\nimport { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\nimport { logo } from 'src/assets/brand/logo'\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderToggler className=\"ps-1\" onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}>\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          {/* <CIcon icon={logo} height={48} alt=\"Logo\" /> */}\n          <h2>Logo Url</h2>\n        </CHeaderBrand>\n        <CHeaderNav className=\"d-none d-md-flex me-auto\">\n          <CNavItem>\n            <CNavLink to=\"/dashboard\" component={NavLink}>\n              Dashboard\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink to=\"/examination\" component={NavLink}>Upcoming Examination</CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink to='/recent-examination' component={NavLink}>Recent Examination</CNavLink>\n          </CNavItem>\n        </CHeaderNav>\n        {/* <CHeaderNav>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilBell} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilList} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilEnvelopeOpen} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n        </CHeaderNav> */}\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>\n      <CHeaderDivider />\n      <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items && items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilBell,\n  cilCalculator,\n  cilChartPie,\n  cilCursor,\n  cilDescription,\n  cilDrop,\n  cilNotes,\n  cilPencil,\n  cilPuzzle,\n  cilSpeedometer,\n  cilStar,\n} from '@coreui/icons'\nimport { CNavGroup, CNavItem, CNavTitle } from '@coreui/react'\n\nconst _nav = [\n  {\n    component: CNavItem,\n    name: 'Dashboard',\n    to: '/dashboard',\n    icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n    // badge: {\n    //   color: 'info',\n    //   text: 'NEW',\n    // },\n  },\n\n  {\n    component: CNavItem,\n    name: 'Upcoming Examination',\n    to: '/examination',\n    icon: <CIcon icon={cilDescription} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Recent Examination',\n    to: '/recent-examination',\n    icon: <CIcon icon={cilDescription} customClassName=\"nav-icon\" />,\n  },\n  \n]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport logoNegative from '../assets/own_img/logo1_140x83.jpeg'\nimport { sygnet } from 'src/assets/brand/sygnet'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\n        {/* <CIcon className=\"sidebar-brand-full\" icon={logoNegative} height={35} />\n        <CIcon className=\"sidebar-brand-narrow\" icon={sygnet} height={35} /> */}\n        {/* <img src={logoNegative}></img> */}\n        <h2>Logo Image</h2>\n      </CSidebarBrand>\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n      />\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CCallout, CLink } from '@coreui/react'\n\nconst DocsCallout = (props) => {\n  const { content, href, name } = props\n\n  const plural = name.slice(-1) === 's' ? true : false\n\n  const _href = `https://coreui.io/react/docs/${href}`\n\n  return (\n    <CCallout color=\"info\" className=\"bg-white\">\n      {content\n        ? content\n        : `A React ${name} component ${plural ? 'have' : 'has'} been created as a native React.js version\n      of Bootstrap ${name}. ${name} ${plural ? 'are' : 'is'} delivered with some new features,\n      variants, and unique design that matches CoreUI Design System requirements.`}\n      <br />\n      <br />\n      For more information please visit our official{' '}\n      <CLink href={_href} target=\"_blank\">\n        documentation of CoreUI Components Library for React.js\n      </CLink>\n      .\n    </CCallout>\n  )\n}\n\nDocsCallout.propTypes = {\n  content: PropTypes.string,\n  href: PropTypes.string,\n  name: PropTypes.string,\n}\n\nexport default React.memo(DocsCallout)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = (props) => {\n  const { href, name, text, ...rest } = props\n\n  const _href = name ? `https://coreui.io/react/docs/components/${name}` : href\n\n  return (\n    <div className=\"float-end\">\n      <CLink {...rest} href={_href} rel=\"noreferrer noopener\" target=\"_blank\" className=\"card-header-action\">\n        <small className=\"text-medium-emphasis\">{text || 'docs'}</small>\n      </CLink>\n    </div>\n  )\n}\n\nDocsLink.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n  text: PropTypes.string,\n}\n\nexport default React.memo(DocsLink)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CNav, CNavItem, CNavLink, CTabContent, CTabPane } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilCode, cilMediaPlay } from '@coreui/icons'\n\nconst DocsExample = (props) => {\n  const { children, href } = props\n\n  const _href = `https://coreui.io/react/docs/${href}`\n\n  return (\n    <div className=\"example\">\n      <CTabContent className=\"rounded-bottom\">\n        <CTabPane className=\"p-3 preview\" visible>\n          {children}\n        </CTabPane>\n      </CTabContent>\n    </div>\n  )\n}\n\nDocsExample.propTypes = {\n  children: PropTypes.node,\n  href: PropTypes.string,\n}\n\nexport default React.memo(DocsExample)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n","import axios from 'axios'\nimport Cookies from 'js-cookie'\n\n// const BASE_URL = 'http://localhost:5000'\n\nconst BASE_URL = 'https://leadplanner.lotusx.shop/api/'\n\nexport const axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n})\n\n// Add the token to the headers if it exists in cookies\nconst setAuthorizationHeader = () => {\n  const bearerToken = Cookies.get('accessToken')\n  if (bearerToken) {\n    axiosInstance.defaults.headers.common['Authorization'] = `Bearer ${bearerToken}`\n  }\n}\n\n// Call this function to set the Authorization header\nsetAuthorizationHeader()\n\n\n// Add a response interceptor\naxiosInstance.interceptors.response.use(\n  response => response,\n  error => {\n    if (error.response && error.response.status === 401) {\n      window.location.href = '/admin-login'\n    }\n    return Promise.reject(error);\n  }\n);\n\n// --------loginUser-----------//\nexport const loginUser = async (userData) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/student/login`, userData)\n    if (response.data.success) {\n      // set token\n      const accessToken = response.data.data.token\n      // set the access token in cookie\n      Cookies.set('accessToken', accessToken, { secure: true, sameSite: 'strict' })\n\n      // set token\n      const name = response.data.data.studentData.name\n      // set the access token in cookie\n      Cookies.set('name', name, { secure: true, sameSite: 'strict' })\n\n      const id = response.data.data.studentData._id\n      Cookies.set('adminId', id, { secure: true, sameSite: 'strict' })\n\n      const orgId = response.data.data.studentData.organization_id\n      Cookies.set('organizationId', orgId, { secure: true, sameSite: 'strict' })\n\n      const levelId = response.data.data.studentData.level_id\n      Cookies.set('levelId', levelId, { secure: true, sameSite: 'strict' })\n\n      setAuthorizationHeader();\n    }\n    return response.data\n  } catch (error) {\n    console.log(\"error\", error)\n    throw error\n  }\n}\n\n// --------renderOrganizationData-----------//\nexport const renderOrganizationData = async () => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/organization`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------renderOrganizationById-----------//\nexport const renderOrganizationById = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/organization/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addOrganization-----------//\nexport const addOrganization = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/organization`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteOrganizationData--------\nexport const deleteOrganizationData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/organization/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editOrganization---------//\nexport const editOrganization = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/organization/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n// renderTeacherData\nexport const renderTeacherData = async () => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/teacher`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// renderTeacherByOrganization\nexport const renderTeacherByOrganization = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/teacher/by-organization/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addTeacher-----------//\nexport const addTeacher = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/teacher`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteTeacherData--------\nexport const deleteTeacherData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/teacher/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editOrganization---------//\nexport const editTeacher = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/teacher/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n\n// --------renderLevelData-----------//\nexport const renderLevelData = async () => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/levels`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addLevel-----------//\nexport const addLevel = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/levels`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteLevelData--------\nexport const deleteLevelData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/levels/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editLevel---------//\nexport const editLevel = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/levels/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n\n\n// --------renderQuestionData-----------//\nexport const renderQuestionData = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/question/by_level/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addQuestion-----------//\nexport const addQuestion = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/question`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteQuestionData--------\nexport const deleteQuestionData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/question/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editQuestion---------//\nexport const editQuestion = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/question/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n\n// --------renderStudentData-----------//\nexport const renderStudentData = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/student`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------renderStudentDataByOrganization-----------//\nexport const renderStudentDataByOrganization = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/student/organization/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addStudent-----------//\nexport const addStudent = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/student`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteStudentData--------\nexport const deleteStudentData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/student/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editQuestion---------//\nexport const editStudent = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/student/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n\n// --------renderExamData-----------//\nexport const renderExamData = async () => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//renderExamDataById\nexport const renderExamDataById = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//renderStudentExamData\nexport const renderStudentExamData = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/get-exam-student-by-exam-id/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//removedStudentExamData\nexport const removedStudentExamData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/exam/removed-student-from-exam/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n// -------addExam-----------//\nexport const addExam = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteExamData--------\nexport const deleteExamData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/exam/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editExam---------//\nexport const editExam = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/exam/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------renderExamDataByOrganization-----------//\nexport const renderExamDataByOrganization = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/by-organization-id/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------renderExamQuestionData-----------//\nexport const renderExamQuestionData = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/get-exam-qestion-by-exam-id/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------renderExamPracticeQuestionData-----------//\nexport const renderExamPracticeQuestionData = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/get-exam-practice-question-by-exam-id/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//addStudentToExam\nexport const addStudentToExam = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam/add-exam-student`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//addStudentToExam\nexport const renderNotExitStudent = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam/organization-student-not-exit`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//renderExamByStudentId\nexport const renderExamByStudentId = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam/get-exam-student-id`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// submitExamData\nexport const submitExamData = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam-submission`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// updateStudentData\nexport const updateStudentData = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam/update-student-data`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//renderExamStudentById\nexport const renderExamStudentById = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/get-exam-student-by-id/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n","// DataTable.js\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { useTable, usePagination, useSortBy, useGlobalFilter } from 'react-table'\nimport { Table, FormControl, Button } from 'react-bootstrap'\n// import { useState } from 'react'\nimport * as XLSX from 'xlsx'\nimport './DataTable.css' // Import the CSS file\n\nconst DataTable = ({ columns, data, name }) => {\n  // const [tablePageSize, setTablePageSize] = useState(10)\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    state: { pageIndex, pageSize, globalFilter },\n    setGlobalFilter,\n    gotoPage,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 0, pageSize: 10 }, // Set initial pageSize to tablePageSize\n    },\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n  )\n\n  const downloadExcel = () => {\n    const excelData = data.map((row) =>\n      columns.reduce((acc, column) => {\n        acc[column.Header] = row[column.accessor]\n        return acc\n      }, {}),\n    )\n\n    const ws = XLSX.utils.json_to_sheet(excelData)\n    const wb = XLSX.utils.book_new()\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet 1')\n    XLSX.writeFile(wb, 'data.xlsx')\n  }\n\n  return (\n    <div className=\"data-table-container\">\n        <h5>{name?name:\"\"}</h5>\n      <div className=\"data-table-header\">\n        <div className=\"search-box-container\">\n          <FormControl\n            type=\"text\"\n            value={globalFilter || ''}\n            onChange={(e) => setGlobalFilter(e.target.value)}\n            placeholder=\"Search...\"\n          />\n          <span className=\"search-icon\">&#x1F50D;</span>\n        </div>\n        {/* <Button onClick={() => downloadExcel()} variant=\"success\" style={{ color: 'white' }}>\n          Download Excel\n        </Button> */}\n      </div>\n      <div className=\"table-wrapper\">\n      <Table {...getTableProps()} bordered hover responsive>\n        <thead>\n          <tr>\n            <th>Sr. No.</th>\n            {headerGroups.map((headerGroup) => (\n              <React.Fragment key={headerGroup._id}>\n                {headerGroup.headers.map((column) => (\n                  <th key={column._id} {...column.getHeaderProps(column.getSortByToggleProps())}>\n                    {column.render('Header')}\n                    <span>{column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}</span>\n                  </th>\n                ))}\n              </React.Fragment>\n            ))}\n          </tr>\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr key={row._id} {...row.getRowProps()}>\n                <td>{pageIndex * pageSize + i + 1}</td>\n                {row.cells.map((cell) => (\n                  <td key={cell.column._id} {...cell.getCellProps()}>\n                    {cell.render('Cell')}\n                  </td>\n                ))}\n              </tr>\n            )\n          })}\n        </tbody>\n      </Table>\n      </div>\n     \n      <div className=\"pagination-controls\">\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {'<<'}\n        </button>\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n          {'<'}\n        </button>\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n          {'>'}\n        </button>\n        <button onClick={() => gotoPage(page.length - 1)} disabled={!canNextPage}>\n          {'>>'}\n        </button>\n        <span>\n          &nbsp;Page <strong>{pageIndex + 1}</strong>{' '}\n        </span>\n      </div>\n    </div>\n  )\n}\n\nDataTable.propTypes = {\n  columns: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n}\n\nexport default DataTable\n"],"names":["_ref","data","setIsCertificateModalOpen","imageLoaded","setImageLoaded","useState","imageRef","useRef","canvasRef","useEffect","_data$student_id","_data$exam_id","_data$exam_id$level_i","_data$exam_id2","_data$exam_id2$organi","exam_date","Date","exam_id","examDateTime","toLocaleDateString","day","month","year","ctx","current","getContext","clearRect","width","height","drawImage","font","fillStyle","fillText","concat","student_id","name","level_id","organization_id","address","_jsx","children","_jsxs","Modal","show","onHide","dialogClassName","contentClassName","size","centered","Header","closeButton","Title","Body","ref","style","src","certificate","alt","display","onLoad","naturalWidth","naturalHeight","Footer","Button","variant","color","onClick","handleDownload","link","document","createElement","download","href","toDataURL","click","FaDownload","handlePrint","dataUrl","pdf","jsPDF","img","Image","onload","paddedHeight","padding","addImage","autoPrint","save","FaPrint","examId","console","log","isCertificateModalOpen","examDataForPrint","setExamDataForPrint","examType","setExamType","Cookies","get","renderData","async","response","renderExamStudentById","success","_Fragment","className","total_questions","exam_score","correct_questions","wrong_questions","downloadCertificate","CertificateGenerator","result","questions","id","isCompleted","addMarks","obj","length","wrongAnswers","score","correctAnswers","exam_student_id","updateStudentData","Quiz","activeQuestion","setActiveQuestion","selectedAnswers","setSelectedAnswers","Array","fill","showResult","setShowResult","isTimerRunning","setIsTimerRunning","setIsCompleted","title","setTitle","setResult","timer","setTimer","setQuestions","id1","useParams","userId","orgId","levelId","checkExamStatus","renderQuestion","interval","setInterval","prevTimer","clearInterval","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","submitFunction","renderExamQuestionData","_response$data$","_response$data$$exam_","timerCount","exam_duration","updatedQuestions","map","question","correctAnswer","question_id","options","find","option","is_true","renderExamPracticeQuestionData","_response$data$2","_response$data$2$exam","_response$data$3","is_completed","examSubmissionData","q","i","selectedOption","isQuestionAnswerRight","_id","opt","is_answer","is_question_answer_right","examination_id","submitExamData","submitExamAnswer","addLeadingZero","number","ThankYouExamPage","FaClock","seconds","hours","Math","floor","minutes","remainingSeconds","secondsToTime","onAnswerSelected","answer","index","updatedSelectedAnswers","onClickPrevious","prev","disabled","reduce","acc","Swal","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","QuizComponent","studentId","setData","setExamId","isResult","setIsResult","useNavigate","renderExamByStudentId","columns","accessor","Cell","value","formattedDate","formattedTime","toLocaleTimeString","hour","minute","hour12","_ref2","_ref3","CButton","borderRadius","minWidth","_ref4","row","original","fontWeight","set","secure","sameSite","handleExamView","FaEye","ThankYouPage","DataTable","Dashboard","React","Colors","Typography","Accordion","Breadcrumbs","Cards","Carousels","Collapses","ListGroups","Navs","Paginations","Placeholders","Popovers","Progress","Spinners","Tables","Tooltips","Buttons","ButtonGroups","Dropdowns","ChecksRadios","FloatingLabels","FormControl","InputGroup","Layout","Range","Select","Validation","Charts","CoreUIIcons","Flags","Brands","Alerts","Badges","Modals","Toasts","Widgets","path","exact","element","RecentExam","AppBreadcrumb","currentLocation","useLocation","pathname","breadcrumbs","location","split","curr","array","currentPathname","routeName","getRouteName","routes","currentRoute","route","push","active","getBreadcrumbs","CBreadcrumb","CBreadcrumbItem","window","history","back","cursor","FaArrowLeft","breadcrumb","_createElement","key","AppContent","CContainer","lg","Suspense","fallback","CSpinner","Routes","idx","Route","Navigate","to","replace","AppFooter","CFooter","target","rel","AppHeaderDropdown","initials","part","join","toUpperCase","getInitials","CDropdown","CDropdownToggle","placement","caret","CAvatar","CDropdownMenu","CDropdownHeader","CDropdownItem","CIcon","cilUser","cilSettings","CDropdownDivider","logOut","remove","POSITION","TOP_RIGHT","setTimeout","cilLockLocked","AppHeader","dispatch","useDispatch","sidebarShow","useSelector","state","CHeader","fluid","CHeaderToggler","type","cilMenu","CHeaderBrand","CHeaderNav","CNavItem","CNavLink","component","NavLink","CHeaderDivider","AppSidebarNav","items","navLink","badge","CBadge","navItem","item","rest","Component","navGroup","_item$items","String","toggler","visible","startsWith","cilSpeedometer","customClassName","cilDescription","AppSidebar","unfoldable","sidebarUnfoldable","CSidebar","onVisibleChange","CSidebarBrand","CSidebarNav","SimpleBar","navigation","CSidebarToggler","DocsCallout","props","content","plural","slice","_href","CCallout","CLink","DocsLink","DocsExample","CTabContent","CTabPane","DefaultLayout","BASE_URL","axiosInstance","axios","create","baseURL","headers","setAuthorizationHeader","bearerToken","defaults","common","interceptors","use","status","Promise","reject","loginUser","post","userData","accessToken","token","studentData","renderOrganizationData","renderTeacherByOrganization","renderLevelData","addExam","deleteExamData","delete","editExam","patch","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","pageIndex","pageSize","globalFilter","setGlobalFilter","gotoPage","nextPage","previousPage","canNextPage","canPreviousPage","useTable","initialState","useGlobalFilter","useSortBy","usePagination","onChange","e","placeholder","Table","bordered","hover","responsive","headerGroup","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","getRowProps","cells","cell","getCellProps"],"sourceRoot":""}